DROP SEQUENCE IF EXISTS ID_GENERATOR_SQ;
CREATE SEQUENCE IF NOT EXISTS ID_GENERATOR_SQ START WITH 1;


--
-- User entity
--
DROP TABLE IF EXISTS _USER CASCADE;
CREATE TABLE IF NOT EXISTS _USER
(
    ID               NUMBER PRIMARY KEY,
    USERNAME         VARCHAR(32) NOT NULL UNIQUE,
    PASSWORD         VARCHAR(256),
    TEAM_ID          BIGINT,
    EMAIL            VARCHAR(128),
    NAME             VARCHAR(64),
    DEPT             BIGINT,
    GRADE            VARCHAR(64),
    PASSWORD_EXPIRED TIMESTAMP,
    HIRED            TIMESTAMP,
    USE              CHAR(1)   DEFAULT 'Y' CHECK (USE = 'Y' OR USE = 'N'),
    -- auditors
    REMOVAL          CHAR(1)   DEFAULT 'N' COMMENT '삭제여부' CHECK (REMOVAL = 'Y' OR REMOVAL = 'N'),
    CREATED          TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '생성일시',
    CREATOR          VARCHAR(32) COMMENT '생성자',
    UPDATED          TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '수정일시',
    UPDATER          VARCHAR(32) COMMENT '수정자'
);
COMMENT ON TABLE _USER IS '사용자';
COMMENT ON COLUMN _USER.USERNAME IS '사용자명(로그인 ID)';
COMMENT ON COLUMN _USER.PASSWORD_EXPIRED IS '비밀번호 만료일시';
COMMENT ON COLUMN _USER.NAME IS '성명';
COMMENT ON COLUMN _USER.DEPT IS '부서';
COMMENT ON COLUMN _USER.GRADE IS '직급';
COMMENT ON COLUMN _USER.USE IS '잠김';

--
-- Team Entity
--
DROP TABLE IF EXISTS _TEAM CASCADE;
CREATE TABLE IF NOT EXISTS _TEAM
(
    ID      BIGINT PRIMARY KEY,
    PID     BIGINT,
    NAME    VARCHAR(64),
    ORD     INT       DEFAULT 0,
    -- auditors
    REMOVAL CHAR(1)   DEFAULT 'N' COMMENT '삭제여부' CHECK (REMOVAL = 'Y' OR REMOVAL = 'N'),
    CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '생성일시',
    CREATOR VARCHAR(32) COMMENT '생성자',
    UPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '수정일시',
    UPDATER VARCHAR(32) COMMENT '수정자'
);
COMMENT ON TABLE _TEAM IS '부서';
COMMENT ON COLUMN _TEAM.ORD IS '정렬순서';


DROP TABLE IF EXISTS _MAP_USER_TEAM CASCADE;
CREATE TABLE IF NOT EXISTS _MAP_USER_TEAM
(
    ID      BIGINT PRIMARY KEY,
    USER_ID BIGINT,
    TEAM_ID BIGINT,
    -- auditors
    REMOVAL CHAR(1)   DEFAULT 'N' COMMENT '삭제여부' CHECK (REMOVAL = 'Y' OR REMOVAL = 'N'),
    CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '생성일시',
    CREATOR VARCHAR(32) COMMENT '생성자',
    UPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '수정일시',
    UPDATER VARCHAR(32) COMMENT '수정자'
);
COMMENT ON TABLE _MAP_USER_TEAM IS '사용자-부서 매핑';


--
-- Authority Entity
--
DROP TABLE IF EXISTS _AUTHORITY CASCADE;
CREATE TABLE IF NOT EXISTS _AUTHORITY
(
    ID      BIGINT PRIMARY KEY,
    PID     INT,
    ROLE    VARCHAR(32) NOT NULL UNIQUE,
    DSC     VARCHAR(1024),
    -- auditors
    REMOVAL CHAR(1)   DEFAULT 'N' COMMENT '삭제여부' CHECK (REMOVAL = 'Y' OR REMOVAL = 'N'),
    CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '생성일시',
    CREATOR VARCHAR(32) COMMENT '생성자',
    UPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '수정일시',
    UPDATER VARCHAR(32) COMMENT '수정자'
);
COMMENT ON TABLE _AUTHORITY IS '권한';
COMMENT ON COLUMN _AUTHORITY.ROLE IS '권한 이름';
COMMENT ON COLUMN _AUTHORITY.DSC IS '권한 설명';


DROP TABLE IF EXISTS _MAP_USER_AUTHORITY CASCADE;
CREATE TABLE IF NOT EXISTS _MAP_USER_AUTHORITY
(
    ID           BIGINT PRIMARY KEY,
    USER_ID      BIGINT NOT NULL,
    AUTHORITY_ID BIGINT NOT NULL,
    -- auditors
    REMOVAL      CHAR(1)   DEFAULT 'N' COMMENT '삭제여부' CHECK (REMOVAL = 'Y' OR REMOVAL = 'N'),
    CREATED      TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '생성일시',
    CREATOR      VARCHAR(32) COMMENT '생성자',
    UPDATED      TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '수정일시',
    UPDATER      VARCHAR(32) COMMENT '수정자'
);
COMMENT ON TABLE _MAP_USER_AUTHORITY IS '사용자-권한 매핑';


DROP TABLE IF EXISTS _MAP_TEAM_AUTHORITY CASCADE;
CREATE TABLE IF NOT EXISTS _MAP_TEAM_AUTHORITY
(
    ID           BIGINT PRIMARY KEY,
    TEAM_ID      BIGINT NOT NULL,
    AUTHORITY_ID BIGINT NOT NULL,
    -- auditors
    REMOVAL      CHAR(1)   DEFAULT 'N' COMMENT '삭제여부' CHECK (REMOVAL = 'Y' OR REMOVAL = 'N'),
    CREATED      TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '생성일시',
    CREATOR      VARCHAR(32) COMMENT '생성자',
    UPDATED      TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '수정일시',
    UPDATER      VARCHAR(32) COMMENT '수정자'
);
COMMENT ON TABLE _MAP_TEAM_AUTHORITY IS '부서-권한 매핑';


--
-- Menu Entity
--
DROP TABLE IF EXISTS _MENU CASCADE;
CREATE TABLE IF NOT EXISTS _MENU
(
    ID       BIGINT PRIMARY KEY,
    PID      BIGINT,
    TYPE     VARCHAR(32),
    NAME     VARCHAR(256) NOT NULL,
    NAME_AID VARCHAR(256),
    URI      VARCHAR(256),
    DSC      VARCHAR(1024),
    ORD      INT       DEFAULT 0,
    PROPS    VARCHAR(4000),
    OPENED   TIMESTAMP,
    -- auditors
    REMOVAL  CHAR(1)   DEFAULT 'N' COMMENT '삭제여부' CHECK (REMOVAL = 'Y' OR REMOVAL = 'N'),
    CREATED  TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '생성일시',
    CREATOR  VARCHAR(32) COMMENT '생성자',
    UPDATED  TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '수정일시',
    UPDATER  VARCHAR(32) COMMENT '수정자'
);
COMMENT ON TABLE _MENU IS '메뉴';
COMMENT ON COLUMN _MENU.PID IS '상위(부모) ID';
COMMENT ON COLUMN _MENU.TYPE IS '유형 (일반페이지/게시판/링크 등등)';
COMMENT ON COLUMN _MENU.NAME_AID IS '보조 이름';
COMMENT ON COLUMN _MENU.DSC IS '설명';
COMMENT ON COLUMN _MENU.ORD IS '순서';
COMMENT ON COLUMN _MENU.PROPS IS '속성';
COMMENT ON COLUMN _MENU.OPENED IS '개방일시';


DROP TABLE IF EXISTS _MAP_MENU_AUTHORITY CASCADE;
CREATE TABLE IF NOT EXISTS _MAP_MENU_AUTHORITY
(
    ID           BIGINT PRIMARY KEY,
    AUTHORITY_ID BIGINT NOT NULL,
    MENU_ID      BIGINT NOT NULL,
    -- auditors
    REMOVAL      CHAR(1)   DEFAULT 'N' COMMENT '삭제여부' CHECK (REMOVAL = 'Y' OR REMOVAL = 'N'),
    CREATED      TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '생성일시',
    CREATOR      VARCHAR(32) COMMENT '생성자',
    UPDATED      TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '수정일시',
    UPDATER      VARCHAR(32) COMMENT '수정자'
);
COMMENT ON TABLE _MAP_MENU_AUTHORITY IS '메뉴-권한 매핑';


DROP TABLE IF EXISTS _CODE CASCADE;
CREATE TABLE IF NOT EXISTS _CODE
(
    ID      BIGINT PRIMARY KEY,
    GRP     VARCHAR(256) NOT NULL,
    CODE    VARCHAR(256) NOT NULL,
    NAME    VARCHAR(256),
    ORD     INT       DEFAULT 0,
    DSC     VARCHAR(512),
    USE     CHAR(1)   DEFAULT 'Y' CHECK (USE = 'Y' OR USE = 'N'),
    -- auditors
    REMOVAL CHAR(1)   DEFAULT 'N' COMMENT '삭제여부' CHECK (REMOVAL = 'Y' OR REMOVAL = 'N'),
    CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '생성일시',
    CREATOR VARCHAR(32) COMMENT '생성자',
    UPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '수정일시',
    UPDATER VARCHAR(32) COMMENT '수정자'
);
COMMENT ON TABLE _CODE IS '공통코드';
COMMENT ON COLUMN _CODE.GRP IS '그룹(상위) 코드';
COMMENT ON COLUMN _CODE.CODE IS '코드';
COMMENT ON COLUMN _CODE.NAME IS '코드 이름';
COMMENT ON COLUMN _CODE.ORD IS '순서';
COMMENT ON COLUMN _CODE.DSC IS '설명';


--
-- File entity
--
DROP TABLE IF EXISTS _FILE CASCADE;
CREATE TABLE IF NOT EXISTS _FILE
(
    ID      VARCHAR(128) PRIMARY KEY,
    NAME    VARCHAR(256) NOT NULL,
    PATH    VARCHAR(512) NOT NULL,
    SIZE    BIGINT    DEFAULT 0,
    MIME    VARCHAR(128),
    READ  BIGINT    DEFAULT 0,
    PACK    VARCHAR(64) DEFAULT 'NONE',
    ORD     INT,
    -- auditors
    REMOVAL CHAR(1)   DEFAULT 'N' COMMENT '삭제여부' CHECK (REMOVAL = 'Y' OR REMOVAL = 'N'),
    CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '생성일시',
    CREATOR VARCHAR(32) COMMENT '생성자',
    UPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '수정일시',
    UPDATER VARCHAR(32) COMMENT '수정자'
);
CREATE INDEX _FILE_PACK_IX ON _FILE (PACK);
COMMENT ON TABLE _FILE IS '첨부파일';
COMMENT ON COLUMN _FILE.NAME IS '원본 파일명';
COMMENT ON COLUMN _FILE.PATH IS '저장 경로';
COMMENT ON COLUMN _FILE.SIZE IS '파일 크기';
COMMENT ON COLUMN _FILE.MIME IS 'Content-Type(or Mime-Type)';
COMMENT ON COLUMN _FILE.READ IS '다운로드 횟수';
COMMENT ON COLUMN _FILE.PACK IS '파일 묶음';
COMMENT ON COLUMN _FILE.ORD IS '파일 정렬 순서';


--
-- Article Entity
--
DROP TABLE IF EXISTS _ARTICLE_CATEGORY CASCADE;
CREATE TABLE IF NOT EXISTS _ARTICLE_CATEGORY
(
    CATEGORY VARCHAR(64) PRIMARY KEY,
    TYPE     VARCHAR(64),
    DSC      VARCHAR(4000),
    PROPS    CLOB,
    REMOVAL  CHAR(1)   DEFAULT 'N' COMMENT '삭제여부' CHECK (REMOVAL = 'Y' OR REMOVAL = 'N'),
    CREATED  TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '생성일시',
    CREATOR  VARCHAR(32) COMMENT '생성자',
    UPDATED  TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '수정일시',
    UPDATER  VARCHAR(32) COMMENT '수정자'
);
COMMENT ON TABLE _ARTICLE_CATEGORY IS '게시글 분류';
COMMENT ON COLUMN _ARTICLE_CATEGORY.TYPE IS '유형(일반게시판/공지사항/자료실 등등)';
COMMENT ON COLUMN _ARTICLE_CATEGORY.DSC IS '설명';
COMMENT ON COLUMN _ARTICLE_CATEGORY.PROPS IS '속성(JSON)';


DROP TABLE IF EXISTS _ARTICLE CASCADE;
CREATE TABLE IF NOT EXISTS _ARTICLE
(
    ID        BIGINT PRIMARY KEY,
    BID       BIGINT,
    ORD       INT       DEFAULT 0,
    DEPTH     INT       DEFAULT 0,
    CATEGORY  VARCHAR(64) NOT NULL,
    USER_ID   BIGINT,
    AUTHOR    VARCHAR(64),
    AUTHOR_IP VARCHAR(64),
    EMAIL     VARCHAR(256),
    PASSWORD  VARCHAR(256),
    SECRET    CHAR(1)   DEFAULT 'N' CHECK (SECRET = 'Y' OR SECRET = 'N'),
    READ      BIGINT    DEFAULT 0,
    TITLE     VARCHAR(1024),
    CONTENT   CLOB,
    FULLTEXT  CLOB,
    EXTRA     CLOB,
    -- auditors
    REMOVAL   CHAR(1)   DEFAULT 'N' COMMENT '삭제여부' CHECK (REMOVAL = 'Y' OR REMOVAL = 'N'),
    CREATED   TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '생성일시',
    CREATOR   VARCHAR(32) COMMENT '생성자',
    UPDATED   TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '수정일시',
    UPDATER   VARCHAR(32) COMMENT '수정자'
);
COMMENT ON TABLE _ARTICLE IS '게시글';
COMMENT ON COLUMN _ARTICLE.BID IS '답글용 묶음 ID';
COMMENT ON COLUMN _ARTICLE.ORD IS '답글 정렬 순서';
COMMENT ON COLUMN _ARTICLE.DEPTH IS '답글 깊이';
COMMENT ON COLUMN _ARTICLE.CATEGORY IS '게시글 분류';
COMMENT ON COLUMN _ARTICLE.SECRET IS '비밀글';
COMMENT ON COLUMN _ARTICLE.READ IS '조횟수';
COMMENT ON COLUMN _ARTICLE.FULLTEXT IS '문자화된 내용(HTML 태그 제거, 텍스트 검색 용)';
COMMENT ON COLUMN _ARTICLE.EXTRA IS '부가정보(JSON)';

CREATE TABLE IF NOT EXISTS _ARTICLE_RECORD
(
    ID         BIGINT PRIMARY KEY,
    ARTICLE_ID BIGINT,
    USER_ID    BIGINT,
    AUTHOR     VARCHAR(64),
    AUTHOR_IP  VARCHAR(64),
    EMAIL      VARCHAR(256),
    SECRET     CHAR(1),
    TITLE      VARCHAR(1024),
    CONTENT    CLOB,
    EXTRA      CLOB,
    UPDATED   TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '수정일시',
    UPDATER   VARCHAR(32) COMMENT '수정자'
);
COMMENT ON TABLE _ARTICLE_RECORD IS '게시글 변경 기록';


DROP TABLE IF EXISTS _ARTICLE_COMMENT CASCADE;
CREATE TABLE IF NOT EXISTS _ARTICLE_COMMENT
(
    ID         BIGINT PRIMARY KEY,
    BID        BIGINT,
    ORD        INT       DEFAULT 0,
    DEPTH      INT       DEFAULT 0,
    ARTICLE_ID BIGINT NOT NULL,
    USER_ID    BIGINT,
    AUTHOR     VARCHAR(64),
    EMAIL      VARCHAR(256),
    PASSWORD   VARCHAR(256),
    COMMENT    VARCHAR(4000),
    SECRET     CHAR(1)   DEFAULT 'N' CHECK (SECRET = 'Y' OR SECRET = 'N'),
    -- auditors
    REMOVAL    CHAR(1)   DEFAULT 'N' COMMENT '삭제여부' CHECK (REMOVAL = 'Y' OR REMOVAL = 'N'),
    CREATED    TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '생성일시',
    CREATOR    VARCHAR(32) COMMENT '생성자',
    UPDATED    TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '수정일시',
    UPDATER    VARCHAR(32) COMMENT '수정자'
);
COMMENT ON TABLE _ARTICLE_COMMENT IS '게시글 댓글';
COMMENT ON COLUMN _ARTICLE_COMMENT.BID IS '묶음 ID';
COMMENT ON COLUMN _ARTICLE_COMMENT.ORD IS '정렬 순서';
COMMENT ON COLUMN _ARTICLE_COMMENT.DEPTH IS '답글 깊이';
COMMENT ON COLUMN _ARTICLE_COMMENT.ARTICLE_ID IS '게시물 ID';
COMMENT ON COLUMN _ARTICLE_COMMENT.AUTHOR IS '작성자 이름';
COMMENT ON COLUMN _ARTICLE_COMMENT.EMAIL IS '이메일';
COMMENT ON COLUMN _ARTICLE_COMMENT.PASSWORD IS '비밀번호';
COMMENT ON COLUMN _ARTICLE_COMMENT.SECRET IS '비밀글';


ALTER TABLE _USER
	ADD CONSTRAINT _USER_TEAM_FK1
		FOREIGN KEY (TEAM_ID) REFERENCES _TEAM;

ALTER TABLE _MAP_USER_TEAM
	ADD CONSTRAINT _MAP_USER_TEAM_FK1
		FOREIGN KEY (USER_ID) REFERENCES _USER;

ALTER TABLE _MAP_USER_TEAM
	ADD CONSTRAINT _MAP_USER_TEAM_FK2
		FOREIGN KEY (TEAM_ID) REFERENCES _TEAM;

ALTER TABLE _MAP_USER_AUTHORITY
	ADD CONSTRAINT _MAP_USER_AUTHORITY_FK1
		FOREIGN KEY (USER_ID) REFERENCES _USER;

ALTER TABLE _MAP_USER_AUTHORITY
	ADD CONSTRAINT _MAP_USER_AUTHORITY_FK2
		FOREIGN KEY (AUTHORITY_ID) REFERENCES _AUTHORITY;

ALTER TABLE _MAP_TEAM_AUTHORITY
	ADD CONSTRAINT _MAP_TEAM_AUTHORITY_FK1
		FOREIGN KEY (TEAM_ID) REFERENCES _TEAM;

ALTER TABLE _MAP_TEAM_AUTHORITY
	ADD CONSTRAINT _MAP_TEAM_AUTHORITY_FK2
		FOREIGN KEY (AUTHORITY_ID) REFERENCES _AUTHORITY;

ALTER TABLE _MAP_MENU_AUTHORITY
	ADD CONSTRAINT _MAP_MENU_AUTHORITY_FK1
		FOREIGN KEY (MENU_ID) REFERENCES _MENU;

ALTER TABLE _MAP_MENU_AUTHORITY
	ADD CONSTRAINT _MAP_MENU_AUTHORITY_FK2
		FOREIGN KEY (AUTHORITY_ID) REFERENCES _AUTHORITY;

ALTER TABLE _CODE
	ADD CONSTRAINT _CODE_UK1
		UNIQUE (GRP, CODE);

ALTER TABLE _ARTICLE
    ADD CONSTRAINT _ARTICLE_FK1
        FOREIGN KEY (USER_ID) REFERENCES _USER (ID);

ALTER TABLE _ARTICLE_COMMENT
    ADD CONSTRAINT _ARTICLE_COMMENT_FK1
        FOREIGN KEY (ARTICLE_ID) REFERENCES _ARTICLE;
